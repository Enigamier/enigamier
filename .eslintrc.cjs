module.exports = {
  env: {
    browser: true,
    es2021: true,
  },
  ignorePatterns: [
    'node_modules',
    'dist',
  ],
  extends: [
    'eslint:recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:@typescript-eslint/stylistic',
    'plugin:@typescript-eslint/stylistic-type-checked',
  ],
  parser: '@typescript-eslint/parser',
  parserOptions: {
    ecmaVersion: 'latest',
    sourceType: 'module',
    project: ['./tsconfig.json', './tsconfig.node.json'],
  },
  plugins: [
    '@typescript-eslint',
    '@stylistic',
  ],
  noInlineConfig: true,
  rules: {
    '@stylistic/arrow-parens': ['error', 'as-needed'],
    '@stylistic/brace-style': 'error',
    '@stylistic/indent': ['error', 2],
    '@stylistic/max-len': ['error', { code: 120 }],
    '@stylistic/comma-dangle': ['error', 'always-multiline'],
    '@stylistic/comma-style': 'error',
    '@stylistic/dot-location': ['error', 'property'],
    '@stylistic/semi': ['error', 'never'],
    '@stylistic/no-tabs': 'error',
    '@stylistic/eol-last': ['error', 'always'],
    '@stylistic/quote-props': ['error', 'as-needed'],
    '@stylistic/quotes': ['error', 'single'],
    '@stylistic/lines-around-comment': ['error', { beforeBlockComment: true, beforeLineComment: true }],
    '@stylistic/lines-between-class-members': 'error',
    '@stylistic/linebreak-style': ['error', 'unix'],
    '@stylistic/max-statements-per-line': 'error',
    '@stylistic/member-delimiter-style': 'error',
    '@stylistic/multiline-ternary': ['error', 'always-multiline'],
    '@stylistic/new-parens': 'error',
    '@stylistic/implicit-arrow-linebreak': 'error',
    '@stylistic/no-trailing-spaces': 'error',
    '@stylistic/no-whitespace-before-property': 'error',
    '@stylistic/no-multi-spaces': 'error',
    '@stylistic/space-unary-ops': 'error',
    '@stylistic/space-infix-ops': 'error',
    '@stylistic/space-in-parens': 'error',
    '@stylistic/space-before-function-paren': ['error', { named: 'never' }],
    '@stylistic/space-before-blocks': 'error',
    '@stylistic/no-multiple-empty-lines': ['error', { max: 1 }],
    '@stylistic/no-mixed-spaces-and-tabs': 'error',
    '@stylistic/array-bracket-newline': ['error', { multiline: true }],
    '@stylistic/array-element-newline': ['error', 'consistent'],
    '@stylistic/object-curly-newline': ['error', { multiline: true }],
    '@stylistic/object-property-newline': ['error', { allowAllPropertiesOnSameLine: true }],
    '@stylistic/newline-per-chained-call': 'error',
    '@stylistic/array-bracket-spacing': 'error',
    '@stylistic/arrow-spacing': ['error', { before: true, after: true }],
    '@stylistic/block-spacing': ['error', 'always'],
    '@stylistic/comma-spacing': 'error',
    '@stylistic/computed-property-spacing': 'error',
    '@stylistic/func-call-spacing': 'error',
    '@stylistic/generator-star-spacing': 'error',
    '@stylistic/key-spacing': 'error',
    '@stylistic/keyword-spacing': 'error',
    '@stylistic/object-curly-spacing': ['error', 'always'],
    '@stylistic/rest-spread-spacing': ['error', 'never'],
    '@stylistic/switch-colon-spacing': ['error', { before: false, after: true }],
    '@stylistic/template-curly-spacing': ['error', 'never'],
    '@stylistic/type-annotation-spacing': 'error',
    '@stylistic/yield-star-spacing': ['error', 'before'],
    'array-callback-return': 'error',
    'prefer-arrow-callback': 'error',
    'prefer-template': 'error',
    '@typescript-eslint/no-unused-vars': ['error', { vars: 'all', args: 'after-used', ignoreRestSiblings: true }],
    '@typescript-eslint/consistent-type-imports': 'error',
    '@typescript-eslint/naming-convention': 'error',
    '@typescript-eslint/restrict-template-expressions': 'error',
    '@typescript-eslint/prefer-readonly': 'error',
  },
  overrides: [
    {
      env: { node: true },
      files: ['.eslintrc.{js,cjs}'],
      parserOptions: { sourceType: 'script' },
      rules: { '@typescript-eslint/naming-convention': 'off' },
    },
  ],
}
